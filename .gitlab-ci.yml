image: maven:3.8.6-jdk-11
stages:
- .pre
- pull
- build
- remove-d
- build-image
- dast
- performance
- .post

include:
 
  - template: Jobs/Code-Quality.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml 
  - template: Security/Container-Scanning.gitlab-ci.yml
  - template: Security/DAST-On-Demand-API-Scan.gitlab-ci.yml
  - template: Security/DAST-On-Demand-Scan.gitlab-ci.yml
  - template: Security/DAST.gitlab-ci.yml
#  - local: Dependency-Scanning.gitlab-ci.yml
 
.pre:
  stage: .pre
  script: 
    - sudo apt update -y
  tags:
    - maven-2

cache:
  paths:
    - data/

code_quality: 
  stage: test
  variables:
    CODE_QUALITY_IMAGE: "registry.gitlab.com/gitlab-org/ci-cd/codequality:latest"  
  allow_failure: true 
  tags:
    - maven-2


dependency_scanning:
  stage: test
  tags:
    - docker

sast:
  stage: test
  tags:
    - docker

license_scanning:
  stage: test
  tags:
    - docker



secret_detection:
  stage: test
  tags:
    - docker


    
pull-code:
  stage: pull
  only:
  - main
  tags:
  - maven-2
  script:
  - echo "preparing data and dependencies..."
  - pwd
  - ls

build-code:
  stage: build
  only:
  - main
  tags:
  - maven-2
  before_script:
  - echo "=======change permission ======="
  - chmod +x maveninstall.sh
  script:
  - echo "==== Project Building Started ====="
  - "./maveninstall.sh"
  - echo "code build Successfull..."
  - pwd
  when: on_success
  artifacts:
    paths:
    - /.target/*.war
    expire_in: 15 days

remove-old-docker:
  stage: remove-d
  only:
  - main
  tags:
  - maven-2
  before_script:
  - echo "change permission of dockerrmf.sh"
  - chmod +x dockerrmf.sh
  script:
  - echo "Starting remove old docker image and container"
  - "./dockerrmf.sh"
  - echo "Removed all docker image and container"



build-docker-image:
  stage: build-image
  only:
  - main
  tags:
  - maven-2
  needs:
  - build-code
  before_script:
  - chmod +x dockercmd.sh
  script:
  - "./dockercmd.sh"
  - echo "====Build And Deploy successfull.... ====="

container_scanning:
  variables:
    GIT_STRATEGY: fetch
    DOCKERFILE_PATH: "$CI_PROJECT_DIR/Dockerfile"
    DOCKER_IMAGE: registry.gitlab.com/fineshift/java_deploy:latest
    SECURE_LOG_LEVEL: "debug"
  tags:
    - docker
  needs:
   - build-image

# Container-scanning:
#   stage: test
#   script:
#     - echo "container scanning is start"
#   tags:
#     - docker

dast:
  stage: dast
  script: 
    - echo "dast stage"
  tags:
    - maven-2

performance:
  stage: performance
  script: 
    - echo "performance stage"
  tags:
    - docker    
    
.post:
  stage: .post
  script: 
    - echo "post stage"
  tags:
    - docker   
    
